{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagar.SAGARS-PC\\\\OneDrive\\\\Desktop\\\\COS\\\\Zerodha clone\\\\dashboard\\\\src\\\\components\\\\Positions.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios, { all } from \"axios\";\n\n// import { positions } from \"../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holdings = () => {\n  _s();\n  const [allHoldings, setAllHoldings] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3002/allHoldings\").then(res => {\n      // console.log(res.data);\n      setAllHoldings(res.data);\n    });\n  }, []);\n};\n\n// const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n_s(Holdings, \"H4gboFb/PA895+MsOmZ8B/s1UQA=\");\n_c = Holdings;\nconst labels = allHoldings.map(subArray => subArray[\"name\"]);\nconst data = {\n  labels,\n  datasets: [{\n    label: \"Stock Price\",\n    data: allHoldings.map(stock => stock.price),\n    backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n  }]\n};\nconst Positions = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: [\"Positions (\", positions.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Instrument\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qty.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Avg.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"LTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"P&L\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Chg.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), positions.map((stock, index) => {\n          const curValue = stock.price * stock.qty;\n          const isProfit = curValue - stock.avg * stock.qty >= 0.0;\n          const profClass = isProfit ? \"profit\" : \"loss\";\n          const dayClass = stock.isLoss ? \"loss\" : \"profit\";\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.qty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.avg.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: stock.price.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: profClass,\n              children: (curValue - stock.avg * stock.qty).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: dayClass,\n              children: stock.day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = Positions;\nexport default Positions;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holdings\");\n$RefreshReg$(_c2, \"Positions\");","map":{"version":3,"names":["React","useState","useEffect","axios","all","jsxDEV","_jsxDEV","Fragment","_Fragment","Holdings","_s","allHoldings","setAllHoldings","get","then","res","data","_c","labels","map","subArray","datasets","label","stock","price","backgroundColor","Positions","children","className","positions","length","fileName","_jsxFileName","lineNumber","columnNumber","index","curValue","qty","isProfit","avg","profClass","dayClass","isLoss","product","name","toFixed","day","_c2","$RefreshReg$"],"sources":["C:/Users/sagar.SAGARS-PC/OneDrive/Desktop/COS/Zerodha clone/dashboard/src/components/Positions.js"],"sourcesContent":["import React from \"react\";\nimport  { useState, useEffect } from \"react\";\nimport axios, { all } from \"axios\";\n\n// import { positions } from \"../data/data\";\n\n\nconst Holdings = () => {\n  const [allHoldings, setAllHoldings] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3002/allHoldings\").then((res) => {\n      // console.log(res.data);\n      setAllHoldings(res.data);\n    });\n  }, []);\n}\n\n  // const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n  const labels = allHoldings.map((subArray) => subArray[\"name\"]);\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Stock Price\",\n        data: allHoldings.map((stock) => stock.price),\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n    ],\n  };\n\nconst Positions = () => {\n  return (\n    <>\n      <h3 className=\"title\">Positions ({positions.length})</h3>\n\n      <div className=\"order-table\">\n        <table>\n          <tr>\n            <th>Product</th>\n            <th>Instrument</th>\n            <th>Qty.</th>\n            <th>Avg.</th>\n            <th>LTP</th>\n            <th>P&L</th>\n            <th>Chg.</th>\n          </tr>\n\n          {positions.map((stock, index) => {\n            const curValue = stock.price * stock.qty;\n            const isProfit = curValue - stock.avg * stock.qty >= 0.0;\n            const profClass = isProfit ? \"profit\" : \"loss\";\n            const dayClass = stock.isLoss ? \"loss\" : \"profit\";\n\n            return (\n              <tr key={index}>\n                <td>{stock.product}</td>\n                <td>{stock.name}</td>\n                <td>{stock.qty}</td>\n                <td>{stock.avg.toFixed(2)}</td>\n                <td>{stock.price.toFixed(2)}</td>\n                <td className={profClass}>\n                  {(curValue - stock.avg * stock.qty).toFixed(2)}\n                </td>\n                <td className={dayClass}>{stock.day}</td>\n              </tr>\n            );\n          })}\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default Positions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}